/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.31.v20200723
 * Generated at: 2020-11-13 23:41:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Homepage</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\" crossorigin=\"anonymous\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("\t<!-- \tMeta tag required to make web page responsive -->\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"css/home.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container-fluid pageHeader\">\r\n");
      out.write("\t\t<div class = \"row pt-3 pb-3\">\r\n");
      out.write("\t\t\t<div class = \"col-7\">\r\n");
      out.write("\t\t\t\t<h2 class=\"textColor textShadow\">USC CS 310 Stock Portfolio Management</h2>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class = \"col-5 text-right\">\r\n");
      out.write("\t\t\t\t<h2 class=\"textColor textShadow\" id=\"logoutLink\"><a id=\"logoutLink\" class=\"formatLink\" href=\"index.jsp\" onclick=\"return doLogout();\">Logout</a></h2>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- current portfolio value -->\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container-fluid mt-5\">\r\n");
      out.write("\t\t<div class=\"row justify-content-center text-center\">\r\n");
      out.write("\t\t\t<div class=\"col-9 borderStyle\">\r\n");
      out.write("\t\t\t\t<h3 class=\"textColor pt-1 pb-1\" id=\"portfolioVal\">Current Portfolio Value: $<span id=\"currentValue\">0.00</span></h3>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- value change of portfolio -->\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container-fluid mt-5\">\r\n");
      out.write("\t\t<div class=\"row justify-content-center text-center\">\r\n");
      out.write("\t\t\t<div class=\"col-9 borderStyle\">\r\n");
      out.write("\t\t\t\t<h3 class=\"pt-1 pb-1\" id=\"valueChange\">Value Change: <span id=\"dirArrow\"></span><span class=\"ml-1\" id=\"percentChange\">5%</span></h3>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- graph or portfolio progress -->\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container-fluid mt-5\">\r\n");
      out.write("\t\t<div class=\"row justify-content-center text-center\">\r\n");
      out.write("\t\t\t<div class=\"col-9 borderStyle\">\r\n");
      out.write("\t\t\t\t<h3 class=\"textColor pt-1 pb-1\">Portfolio Progress:</h3>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t      \t\t<div class=\"text-danger errorMessage\" id=\"graphDateError\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- form here with a calendar input -->\r\n");
      out.write("\t\t\t\t<!-- need to add an event listener on the fields in this form -->\r\n");
      out.write("\t\t\t\t<form method=\"POST\" action=\"\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"text-danger pt-2 errorMessage\" id=\"graphError\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t    <label for=\"graphStartDate\">Start Date of Graph (must be within a year):</label>\r\n");
      out.write("\t\t\t\t    <input class=\"pl-1\" type=\"date\" id=\"graphStartDate\" name=\"graphStartDate\">\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t   <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t    <label for=\"graphEndDate\">End Date of Graph:</label>\r\n");
      out.write("\t\t\t\t    <input class=\"pl-1\" type=\"date\" id=\"graphEndDate\" name=\"graphEndDate\">\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t  \t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t\t  \t\t\r\n");
      out.write("\t\t\t\t\t  \t<div class=\"col-5\">\r\n");
      out.write("\t\t\t\t\t\t  <label for=\"xAxis\">Time Increments</label>\r\n");
      out.write("\t\t\t\t\t\t  <select class=\"form-control\" id=\"xAxis\" name=\"xAxis\">\r\n");
      out.write("\t\t\t\t\t\t    <option value=\"0\">Daily</option>\r\n");
      out.write("\t\t\t\t\t\t    <option value=\"1\">Weekly</option>\r\n");
      out.write("\t\t\t\t\t\t    <option value=\"2\">Monthly</option>\r\n");
      out.write("\t\t\t\t\t\t  </select>\r\n");
      out.write("\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- div for checkbox for S&P -->\r\n");
      out.write("\t\t\t\t <div class=\"form-check mb-2\">\r\n");
      out.write("\t\t\t\t \t<label class=\"form-check-label\" for=\"sAndPCheck\">Graph S&P: </label>\r\n");
      out.write("    \t\t\t\t<input type=\"checkbox\" class=\"form-check-input ml-2\" id=\"sAndPCheck\">\r\n");
      out.write("  \t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("  \t\t\t\t<!--  div for plus/minus icon to zoom in/out -->\r\n");
      out.write("  \t\t\t\t<form class=\"form-inline mb-2 justify-content-center\">\r\n");
      out.write("\t\t\t\t  <button type=\"submit\" class=\"btn btn-light\" id=\"zoomIn\"><i class=\"fa fa-plus\"></i></button>\r\n");
      out.write("\t\t\t\t  <button type=\"submit\" class=\"btn btn-light\" id=\"zoomOut\"><i class=\"fa fa-minus\"></i></button>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\t\t\t\t<!-- place to put graph  -->\r\n");
      out.write("\t\t\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-8\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"chart_div\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- Modal #1 for uploading CSV  -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"portfolioModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"portfolioModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\">\r\n");
      out.write("\t      <div class=\"modal-header\">\r\n");
      out.write("\t        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Upload a CSV</h5>\r\n");
      out.write("\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\t          <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t        </button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("\t      \t<div class=\"text-danger errorMessage\" id=\"csvError\"></div>\r\n");
      out.write("\r\n");
      out.write("\t        <!-- CSV form -->\r\n");
      out.write("\t        <form method=\"POST\" id=\"csvForm\" action=\"home.jsp\" onsubmit=\"return validateCSV();\">\r\n");
      out.write("\t        \t<div class=\"form-group\">\r\n");
      out.write("\t        \t\t\r\n");
      out.write("\t\t        \t<input type=\"file\" accept=\".csv\" name=\"csvFile\" id=\"csvFile\">\r\n");
      out.write("\r\n");
      out.write("\t        \t</div>\r\n");
      out.write("\t        \t<button type=\"submit\" class=\"btn btn-primary\" id=\"portfolioButton\">Upload File</button>\r\n");
      out.write("\t        </form>\r\n");
      out.write("\t     \t\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" id=\"cancelCSV\">Cancel</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- Modal #2 for adding stocks  -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\">\r\n");
      out.write("\t      <div class=\"modal-header\">\r\n");
      out.write("\t        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add a Stock</h5>\r\n");
      out.write("\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\t          <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t        </button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("\t      \t<div class=\"text-danger errorMessage\" id=\"addStockError\"></div>\r\n");
      out.write("\r\n");
      out.write("\t      \t<div class=\"text-success successMessage\" id=\"addStockSuccess\"></div>\r\n");
      out.write("\r\n");
      out.write("\t        <!-- stock add form -->\r\n");
      out.write("\t        <form method=\"POST\" id=\"addStockForm\" action=\"home.jsp\" onsubmit=\"return addNewStock();\">\r\n");
      out.write("\r\n");
      out.write("\t        \t <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t    <label class=\"mr-2\" for=\"addStockTicker\">Ticker</label>\r\n");
      out.write("\t\t\t\t    <input type=\"text\" class=\"form-control mr-2\" id=\"addStockTicker\" name=\"addStockTicker\" placeholder=\"Enter a stock ticker\">\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t    <label class=\"\" for=\"numShares\"># Shares</label>\r\n");
      out.write("\t\t\t\t    <input type=\"text\" class=\"form-control mr-2\" id=\"numShares\" name=\"numShares\">\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t   <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t    <label id=\"labelPurchase\" class=\"\" for=\"datePurchased\">Date Purchased</label>\r\n");
      out.write("\t\t\t\t    <input type=\"date\" class=\"form-control mr-2\" id=\"datePurchased\" name=\"datePurchased\">\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t   <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t    <label id=\"labelSold\" class=\"\" for=\"dateSold\">Date Sold (optional)</label>\r\n");
      out.write("\t\t\t\t    <input type=\"date\" class=\"form-control mr-2\" id=\"dateSold\" name=\"dateSold\">\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\r\n");
      out.write("\t\t\t\t <button type=\"submit\" class=\"btn btn-success\" id=\"addStockButton\">Add Stock</button>\r\n");
      out.write("\t        </form>\r\n");
      out.write("\t     \t\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" id=\"addStockCancel\">Cancel</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Modal #3 for viewing stock history information -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"historyModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"historyModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\">\r\n");
      out.write("\t      <div class=\"modal-header\">\r\n");
      out.write("\t        <h5 class=\"modal-title\" id=\"exampleModalLabel\">View Stock</h5>\r\n");
      out.write("\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\t          <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t        </button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\">\r\n");
      out.write("\t        \r\n");
      out.write("\t      \t<div class=\"text-danger errorMessage\" id =\"viewStockError\"></div>\r\n");
      out.write("\r\n");
      out.write("\t        <!-- stock view form -->\r\n");
      out.write("\t        <form method=\"POST\" id=\"viewStockForm\" action=\"\" onsubmit=\"return addStockHistory();\">\r\n");
      out.write("\r\n");
      out.write("\t        \t <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t    <label class=\"mr-2\" for=\"stockHistory\">Ticker</label>\r\n");
      out.write("\t\t\t\t    <input type=\"text\" class=\"form-control mr-2\" id=\"stockHistory\" name=\"stockHistory\" placeholder=\"Enter a stock ticker\">\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t <button type=\"submit\" class=\"btn btn-primary\" id=\"viewStockButton\">View Stock</button>\r\n");
      out.write("\t        </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" id=\"viewCancel\">Cancel</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- dashboard options -->\r\n");
      out.write("\t<div class=\"container-fluid mt-5\">\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t<div class=\"col-9\">\r\n");
      out.write("\t\t\t\t<div class=\"card-deck\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- Upload portfolio card -->\r\n");
      out.write("\t\t\t\t\t  <div class=\"card\" id=\"portfolioCard\">\r\n");
      out.write("\t\t\t\t\t    <div class=\"card-body text-center\">\r\n");
      out.write("\t\t\t\t\t      <p class=\"card-text\">Upload Portfolio</p>\r\n");
      out.write("\t\t\t\t\t      <a data-toggle=\"modal\" href=\"#portfolioModal\" data-target=\"#portfolioModal\" class=\"stretched-link\"></a>\r\n");
      out.write("\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t  <!-- Add stock portfolio card -->\r\n");
      out.write("\t\t\t\t\t  <div class=\"card bg-success\" id=\"addCard\">\r\n");
      out.write("\t\t\t\t\t    <div class=\"card-body text-center\">\r\n");
      out.write("\t\t\t\t\t      <p class=\"card-text\">Add Stock</p>\r\n");
      out.write("\t\t\t\t\t      <a data-toggle=\"modal\" href=\"#addModal\" data-target=\"#addModal\" class=\"stretched-link\"></a>\r\n");
      out.write("\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t  <!-- Search stock history portfolio card -->\r\n");
      out.write("\t\t\t\t\t  <div class=\"card\" id=\"historyCard\">\r\n");
      out.write("\t\t\t\t\t    <div class=\"card-body text-center\">\r\n");
      out.write("\t\t\t\t\t      <p class=\"card-text\">View Stock</p>\r\n");
      out.write("\t\t\t\t\t     <a data-toggle=\"modal\" href=\"#historyModal\" data-target=\"#historyModal\" class=\"stretched-link\"></a>\r\n");
      out.write("\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- Modal for confirming whether user wants to delete a stock -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"deleteStockModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteStockModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\">\r\n");
      out.write("\t      <div class=\"modal-header\">\r\n");
      out.write("\t        <h5 class=\"modal-title\" id=\"deleteStockModalLabel\">Confirm Deletion</h5>\r\n");
      out.write("\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\t          <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t        </button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("\t      \t<div class=\"text-danger errorMessage\" id =\"deletionError\"></div>\r\n");
      out.write("\r\n");
      out.write("\t        <!-- delete stock form -->\r\n");
      out.write("\t        <form method=\"POST\" id=\"deleteForm\" action=\"home.jsp\" onsubmit=\"return deleteStock();\">\r\n");
      out.write("\t        \t<button type=\"submit\" class=\"btn btn-danger\" id=\"confirmDelete\">Delete Stock</button>\r\n");
      out.write("\t        </form>\r\n");
      out.write("\r\n");
      out.write("\t        <div id=\"deleteTickerSymbol\" style=\"display: none;\"></div>\r\n");
      out.write("\t     \t\r\n");
      out.write("\t      </div>\r\n");
      out.write("\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"cancelDelete\">Cancel</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Modal for confirming user wants to remove stock from STOCK HISTORY TABLE: should only delete entry and remove from graph -->\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"modal fade\" id=\"removeViewStock\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"removeViewStockLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\">\r\n");
      out.write("\t      <div class=\"modal-header\">\r\n");
      out.write("\t        <h5 class=\"modal-title\" id=\"removeViewStockLabel\">Confirm Deletion</h5>\r\n");
      out.write("\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\t          <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t        </button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("\t      \t<div class=\"text-danger errorMessage\" id =\"removeStockHistoryError\"></div>\r\n");
      out.write("\r\n");
      out.write("\t        <!-- remove stock form -->\r\n");
      out.write("\t        <form method=\"POST\" id=\"removeStockForm\" action=\"home.jsp\" onsubmit=\"return removeStockHistory();\">\r\n");
      out.write("\t        \t<button type=\"submit\" class=\"btn btn-danger\" id=\"confirmRemoval\">Delete Stock</button>\r\n");
      out.write("\t        </form>\r\n");
      out.write("\r\n");
      out.write("\t         <div id=\"deleteHistoricalTicker\" style=\"display: none;\"></div>\r\n");
      out.write("\t     \t\r\n");
      out.write("\t      </div>\r\n");
      out.write("\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"cancelRemove\">Cancel</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- table for displaying stocks in current portfolio -->\r\n");
      out.write("\t<div class=\"container-fluid mt-5\">\r\n");
      out.write("\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t<div class=\"col-11\">\r\n");
      out.write("\t\t\t\t<h3 class=\"textColor text-center pt-1 pb-1\">My Stocks:</h3>\r\n");
      out.write("\t\t\t\t<div class=\"table-responsive\">\r\n");
      out.write("\t\t\t\t\t<table class=\"table table-striped table-bordered\">\r\n");
      out.write("\t\t\t\t\t  <thead>\r\n");
      out.write("\t\t\t\t\t    <tr>\r\n");
      out.write("\t\t\t\t\t      <th scope=\"col\">Name</th>\r\n");
      out.write("\t\t\t\t\t      <th scope=\"col\">Symbol</th>\r\n");
      out.write("\t\t\t\t\t      <th scope=\"col\">\r\n");
      out.write("\t\t\t\t\t      Graph\r\n");
      out.write("\t\t\t\t\t      <button type=\"button\" class=\"btn btn-secondary ml-1\" id=\"userStockSelectAll\">Select All</button>\r\n");
      out.write("\t\t\t\t\t      <button type=\"button\" class=\"btn btn-secondary ml-1\" id=\"userStockDeSelectAll\">Deselect All</button>\r\n");
      out.write("\t\t\t\t\t  \t  </th>\r\n");
      out.write("\t\t\t\t\t      <th scope=\"col\">Actions</th>\r\n");
      out.write("\t\t\t\t\t    </tr>\r\n");
      out.write("\t\t\t\t\t  </thead>\r\n");
      out.write("\t\t\t\t\t  <tbody id=\"stockListBody\">\r\n");
      out.write("\t\t\t\t\t\t<!-- dynamically populated below-->\r\n");
      out.write("\t\t\t\t\t  </tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- table for displaying stock history -->\r\n");
      out.write("\t<div class=\"container-fluid mt-5\">\r\n");
      out.write("\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t<div class=\"col-11\">\r\n");
      out.write("\t\t\t\t<h3 class=\"textColor text-center pt-1 pb-1\">Stock History:</h3>\r\n");
      out.write("\t\t\t\t<div class=\"table-responsive\">\r\n");
      out.write("\t\t\t\t\t<table class=\"table table-striped table-bordered\">\r\n");
      out.write("\t\t\t\t\t  <thead>\r\n");
      out.write("\t\t\t\t\t    <tr>\r\n");
      out.write("\t\t\t\t\t      <th scope=\"col\">Symbol</th>\r\n");
      out.write("\t\t\t\t\t      <th scope=\"col\">Graph</th>\r\n");
      out.write("\t\t\t\t\t      <th scope=\"col\">Actions</th>\r\n");
      out.write("\t\t\t\t\t    </tr>\r\n");
      out.write("\t\t\t\t\t  </thead>\r\n");
      out.write("\t\t\t\t\t  <tbody id=\"stockHistoryBody\">\r\n");
      out.write("\t\t\t\t\t\t<!-- dynamically populated below -->\r\n");
      out.write("\t\t\t\t\t  </tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\" integrity=\"sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  // ----------------------- Logout functionality --------------------------------------------\r\n");
      out.write("\r\n");
      out.write("\t  function doLogout() {\r\n");
      out.write("\r\n");
      out.write("\t  \t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\txhttp.open(\"POST\", \"/logout\", false); //false means synchronous\r\n");
      out.write("\t\t\txhttp.send();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t  \t\treturn true;\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// ------------------- CSV Validation functions -----------------------------------------------\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t // function to upload CSV and communicate with CSVServlet\r\n");
      out.write("\t\tfunction validateCSV() {\r\n");
      out.write("\t\t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar csvFile = document.getElementById(\"csvFile\").value;\r\n");
      out.write("\t\t\tcsvFile = \"files/\" + csvFile.substring(12);\r\n");
      out.write("\r\n");
      out.write("\t\t\txhttp.open(\"POST\", \"/csv?filename=\" + csvFile, false); //false means synchronous\r\n");
      out.write("\t\t\txhttp.send();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// handle any error messages\r\n");
      out.write("\t\t\tif(xhttp.responseText.trim() != \"Successfully read in file\") {\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"csvError\").innerHTML = xhttp.responseText;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t// successfully loaded in CSV so list stocks\r\n");
      out.write("\t\t\t\tlistStocks();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// now quit out of modal\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"cancelCSV\").click();\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\treturn false; // redirect to file pointed at by action field above\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// ------------------- Add Stock functions -----------------------------------------------\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t// function to add stock to user's portfolio\r\n");
      out.write("\t\tfunction addNewStock() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t// get the ticker symbol and shares of stock trying to add\r\n");
      out.write("\t\t\tvar addTicker = document.getElementById(\"addStockTicker\").value;\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar numShares = document.getElementById(\"numShares\").value;\r\n");
      out.write("\r\n");
      out.write("\t\t\t// now grab the date purchased\r\n");
      out.write("\t\t\tvar dateBought = document.getElementById(\"datePurchased\").value;\r\n");
      out.write("\r\n");
      out.write("\t\t\t// now grab the optional date sold\r\n");
      out.write("\t\t\tvar dateSold = document.getElementById(\"dateSold\").value;\r\n");
      out.write("\r\n");
      out.write("\t\t\tconsole.log(\"BOUGHT: \" + dateBought);\r\n");
      out.write("\r\n");
      out.write("\t\t\tconsole.log(\"SOLD: \" + dateSold);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// make ajax request to add stock backend\r\n");
      out.write("\t\t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\r\n");
      out.write("\t\t\txhttp.open(\"POST\", \"/addstock?tickersymbol=\" + addTicker + \"&holdings=\" + numShares + \"&stockname=\" + addTicker + \"&buyDate=\" + dateBought + \"&sellDate=\" + dateSold, false); //false means synchronous\r\n");
      out.write("\t\t\txhttp.send();\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (xhttp.responseText.trim() != \"Added stock.\") {\r\n");
      out.write("\t\t\t\t// error occurred\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"addStockError\").innerHTML = xhttp.responseText;\r\n");
      out.write("\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t// success so need to update list of stocks, curr port value, value change\r\n");
      out.write("\r\n");
      out.write(" \t\t\t\tdocument.getElementById(\"addStockTicker\").value = \"\";\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"numShares\").value = \"\";\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"datePurchased\").value = \"\";\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"dateSold\").value = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tlistStocks();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"addStockCancel\").click();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// ------------------- Deletion functions and helpers -----------------------------------------------\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t// function to append hidden ticker symbol to delete modal\r\n");
      out.write("\t\tfunction addSymbol(tickerSymbol) {\r\n");
      out.write("\t\t\tconsole.log(\"ADDING \" + tickerSymbol);\r\n");
      out.write("\t\t\tdocument.getElementById(\"deleteTickerSymbol\").innerHTML = tickerSymbol;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t// function to delete stock\r\n");
      out.write("\t\tfunction deleteStock() {\r\n");
      out.write("\t\t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar stockName = document.getElementById(\"deleteTickerSymbol\").innerHTML;\r\n");
      out.write("\t\t\txhttp.open(\"POST\", \"/deletestock?stockname=\" + stockName, false); //false means synchronous\r\n");
      out.write("\r\n");
      out.write("\t\t\txhttp.send();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// handle any error messages\r\n");
      out.write("\t\t\tif(xhttp.responseText.trim() != \"Deleted stock.\") {\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"deletionError\").innerHTML = \"Error\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// upon successful deletion, need to update table\r\n");
      out.write("\t\t\t\tlistStocks();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// update curr portfolio val\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// update percent change\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\treturn false; // update list of stocks, current portfolio value\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("// ------------------- Listing table of user stocks functions -----------------------------------------------\r\n");
      out.write("\r\n");
      out.write("\t\t// function to dynamically populate user list of stocks\r\n");
      out.write("\t\tfunction listStocks() {\r\n");
      out.write("\t\t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\r\n");
      out.write("\t\t\txhttp.open(\"POST\", \"/list\", false); //false means synchronous\r\n");
      out.write("\r\n");
      out.write("\t\t\txhttp.send();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// parse response\r\n");
      out.write("\t\t\tconsole.log(xhttp.responseText.trim());\r\n");
      out.write("\r\n");
      out.write("\t\t\t// try to split the response into an array to dynamically create the table rows\r\n");
      out.write("\t\t\tvar stockArray = xhttp.responseText.trim().split(\"|\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// know that the current portfolio value is in first entry of response\r\n");
      out.write("\t\t\tvar currValueStr = stockArray[0];\r\n");
      out.write("\t\t\tvar valueChangeStr = stockArray[1];\r\n");
      out.write("\t\t\tvar currValue = parseFloat(currValueStr);\r\n");
      out.write("\t\t\tvar valueChange = parseFloat(valueChangeStr);\r\n");
      out.write("\t\t\tvar roundedPortVal = currValue;\r\n");
      out.write("\t\t\tvar roundedPortChange = valueChange.toFixed(2) + \"%\";\r\n");
      out.write("\t\t\tif (currValue > 0) {\r\n");
      out.write("\t\t\t\troundedPortVal = currValue.toFixed(2);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tdocument.getElementById(\"currentValue\").innerHTML = roundedPortVal;\r\n");
      out.write("\t\t\tdocument.getElementById(\"percentChange\").innerHTML = roundedPortChange;\r\n");
      out.write("\t\t\tdocument.getElementById(\"percentChange\").style.color = (valueChange < 0) ? \"red\" : \"green\";\r\n");
      out.write("\r\n");
      out.write("\t\t\tdocument.getElementById(\"dirArrow\").className = \"\"; // reset\r\n");
      out.write("\r\n");
      out.write("\t\t\t// set the arrow dir and color\r\n");
      out.write("\t\t\tif (valueChange < 0) {\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"dirArrow\").className = \"fa fa-caret-down\";\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"dirArrow\").style.color = \"red\";\r\n");
      out.write("\t\t\t} else if (valueChange > 0) {\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"dirArrow\").className = \"fa fa-caret-up\";\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"dirArrow\").style.color = \"green\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t// clear the table\r\n");
      out.write("\t\t\tdocument.getElementById(\"stockListBody\").innerHTML = '';\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar rowNum = 1;\r\n");
      out.write("\r\n");
      out.write("\t\t\tfor (var i = 2; i < stockArray.length - 1; i+=2) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tlet rowHTML = \r\n");
      out.write("\t\t\t\t\t`<tr class=\"myStock\">\r\n");
      out.write("\t\t\t\t\t      <td class=\"stockFullName\">${stockArray[i]}</td>\r\n");
      out.write("\t\t\t\t\t      <td>${stockArray[i+1]}</td>\r\n");
      out.write("\t\t\t\t\t      <td>\r\n");
      out.write("\t\t\t\t\t      \t<div class=\"form-check\">\r\n");
      out.write("\t\t\t\t\t\t\t  <input name=\"toggle\" class=\"form-check-input graphToggle\" type=\"checkbox\" value=\"${stockArray[i+1]}\" id=\"defaultCheck${rowNum}\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t      </td>\r\n");
      out.write("\t\t\t\t\t      <td><button id=\"deleteButton${rowNum}\" type=\"button\" class=\"btn btn-outline-danger\" data-toggle=\"modal\" data-target=\"#deleteStockModal\" onclick=\"addSymbol('${stockArray[i]}')\">Delete</button></td>\r\n");
      out.write("\t\t\t\t\t  </tr>`;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$(\"#stockListBody\").append(rowHTML);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\trowNum++;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tlistStocks(); // handles the case when the user has already uploaded the CSV\r\n");
      out.write("\t\t//GetPortfolioDataOnLoad(); // deafult graph, everything in portfolio, 3 months ago to today\r\n");
      out.write("\t\tgoogle.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\r\n");
      out.write("\t\tgoogle.setOnLoadCallback(GetPortfolioDataOnLoad);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// ------------------- Listing table of view stocks functions -----------------------------------------------\r\n");
      out.write("\r\n");
      out.write("\tvar viewStockTableID = 1;\r\n");
      out.write("\r\n");
      out.write("\tfunction addHistoricalSymbol(ticker) {\r\n");
      out.write("\t\tconsole.log(\"removing \" + ticker + \" from view history table\");\r\n");
      out.write("\r\n");
      out.write("\t\tdocument.getElementById(\"deleteHistoricalTicker\").innerHTML = ticker;\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// function to add entry to View Stocks Table\r\n");
      out.write("\tfunction addStockHistory() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar historicalTicker = document.getElementById(\"stockHistory\").value;\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(\"viewing stock history of \" + historicalTicker);\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\r\n");
      out.write("\t\txhttp.open(\"POST\", \"/validTicker?ticker=\" + historicalTicker, false); //false means synchronous\r\n");
      out.write("\r\n");
      out.write("\t\txhttp.send();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// parse response\r\n");
      out.write("\t\tconsole.log(xhttp.responseText.trim());\r\n");
      out.write("\r\n");
      out.write("\t\tif(xhttp.responseText.trim() != \"Success\") {\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"viewStockError\").innerHTML = \"Not a valid stock ticker. Please try again\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\r\n");
      out.write("\t\t\t// need to create an entry in Stock History table with ticker symbol, checkbox, delete button\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\tlet newHistoricalRow = \r\n");
      out.write("\t\t\t\t`<tr class=\"historyRow\">\r\n");
      out.write("\t\t\t\t      <td>${historicalTicker}</td>\r\n");
      out.write("\t\t\t\t      <td>\r\n");
      out.write("\t\t\t\t      \t<div class=\"form-check\">\r\n");
      out.write("\t\t\t\t\t\t  <input name=\"toggle\" class=\"form-check-input historyToggle\" type=\"checkbox\" value=\"${historicalTicker}\" id=\"viewStockCheck${viewStockTableID}\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t      </td>\r\n");
      out.write("\t\t\t\t      <td><button id=\"removeHistoryButton${viewStockTableID}\" type=\"button\" class=\"btn btn-outline-danger\" data-toggle=\"modal\" data-target=\"#removeViewStock\" onclick=\"addHistoricalSymbol('${historicalTicker}')\">Delete</button></td>\r\n");
      out.write("\t\t\t\t  </tr>`;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#stockHistoryBody\").append(newHistoricalRow);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\tviewStockTableID++;\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tdocument.getElementById(\"stockHistory\").value = \"\";\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// function to delete an entry from Stock History Table\r\n");
      out.write("\tfunction removeStockHistory() {\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(\"HERE removing a stock history\");\r\n");
      out.write("\r\n");
      out.write("\t\t// 2 cases -- 1) if the checkbox is checked, need to also remove from graph; 2) if not checked, just remove from table\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t// first find the specific row\r\n");
      out.write("\r\n");
      out.write("\t\tvar ticker = document.getElementById(\"deleteHistoricalTicker\").innerHTML;\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"tr.historyRow\").each(function() {\r\n");
      out.write("\r\n");
      out.write("        \tvar currTicker = $(this).find(\"input.historyToggle\").val();\r\n");
      out.write("\r\n");
      out.write("        \tif (ticker == currTicker) {\r\n");
      out.write("\r\n");
      out.write("        \t\tvar isChecked = $(this).find(\"input.historyToggle\").is(\":checked\");\r\n");
      out.write("\r\n");
      out.write("        \t\tif (isChecked) {\r\n");
      out.write("\r\n");
      out.write("        \t\t\t// call function to remove this ticker from graph\r\n");
      out.write("\r\n");
      out.write("        \t\t\t// TO DO: need to remove this ticker for historical stock from graph\r\n");
      out.write("\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\tconsole.log($(this));\r\n");
      out.write("\r\n");
      out.write("        \t\t$(this).remove(); // removes entry from table\r\n");
      out.write("        \t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// toggle function for stock history table\r\n");
      out.write("\r\n");
      out.write("\t$(\"#stockHistoryBody\").on('click', '.historyToggle', function() {\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(\"clicked checkbox in stock history table\");\r\n");
      out.write("\r\n");
      out.write("\t\t// 2 cases -- either clicking a checkbox or unclicking\r\n");
      out.write("\t\tif (this.checked == true) {\r\n");
      out.write("\t\t\tconsole.log(\"checking so include \" + this.value  +\" in graph\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// TO DO -- need to add this stock line to graph\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tSetStartAndEnd();\r\n");
      out.write("\t\t\t//NOTE I changed it so setstartandend is called before checking validgraph\r\n");
      out.write("\t\t\tvar validGraph = CheckGraphDateErrors();\r\n");
      out.write("\t\t\t// if not valid graph, then display error\r\n");
      out.write("\t\t\tif(!validGraph){\r\n");
      out.write("\t\t\t\tthis.checked=false;//should not check if theres any errors\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// else graph\r\n");
      out.write("\t\t\tif (validGraph) {\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"graphDateError\").innerHTML = \"\";\r\n");
      out.write("\t\t\t\t//remove any previous error messages\r\n");
      out.write("\t\t\t\t//TODO call function to graph that stock \r\n");
      out.write("\t\t\t\tqueryHistoricalData(this.value);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tconsole.log(\"unchecking so don't include \" + this.value  +\" in graph\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// TO DO -- need to remove this stock line from graph\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// ------------------------------------ Graph functions ----------------------------------------------------------\r\n");
      out.write("\r\n");
      out.write("\t// ------------------------------------ S & P Graph functionality ---------------------------------------\r\n");
      out.write("\t$(\"#sAndPCheck\").on('click', function() {\r\n");
      out.write("\t\tconsole.log(\"Clicking on S & P checkbox\");\r\n");
      out.write("\r\n");
      out.write("\t\tif (this.checked == true) {\r\n");
      out.write("\t\t\tconsole.log(\"Checking this box so make ajax call to S&P backend\");\r\n");
      out.write("\t\t\tGetSAndP();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tconsole.log(\"Unchecking so remove line from graph\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t// Set up S&P ajax call here\r\n");
      out.write("\tfunction GetSAndP() {\r\n");
      out.write("\t\tSetStartAndEnd();\r\n");
      out.write("\t\tqueryHistoricalData(\"^GSPC\");\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// ------------------------------------ Zoom In/Zoom Out -----------------------------------------\r\n");
      out.write("\t$(\"#zoomIn\").on('click', function() {\r\n");
      out.write("\t\tconsole.log(\"Clicked plus icon to zoom in\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t// don't touch the return statement\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t$(\"#zoomOut\").on('click', function() {\r\n");
      out.write("\t\tconsole.log(\"Clicked minus icon to zoom out\");\r\n");
      out.write("\r\n");
      out.write("\t\t// don't touch the return statement\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// ------------------------------ Portfolio Graph Line stuff ---------------------------------------\r\n");
      out.write("\r\n");
      out.write("\t// put an event listener on start date field\r\n");
      out.write("\t$(\"#graphStartDate\").on('change', function() {\r\n");
      out.write("\t\tconsole.log(\"graph start date was altered\");\r\n");
      out.write("\t\tSetStartAndEnd();\r\n");
      out.write("\t\tGetPortfolioData();\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// put an event listener on end date field\r\n");
      out.write("\t$(\"#graphEndDate\").on('change', function() {\r\n");
      out.write("\t\tconsole.log(\"graph end date was altered\");\r\n");
      out.write("\t\tSetStartAndEnd();\r\n");
      out.write("\t\tGetPortfolioData();\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// put an event listener on time increment field\r\n");
      out.write("\t$(\"#xAxis\").on('change', function() {\r\n");
      out.write("\t\tconsole.log(\"increment changed\");\r\n");
      out.write("\t\tSetStartAndEnd();\r\n");
      out.write("\t\tGetPortfolioData();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// listener for select all button\r\n");
      out.write("\t$(\"#userStockSelectAll\").click(function() {\r\n");
      out.write("\t\tconsole.log(\"Pressed select all\");\r\n");
      out.write("\r\n");
      out.write("\t\t$('input[name=toggle]').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t// graph should have portfolio line for all stocks here\r\n");
      out.write("\r\n");
      out.write("\t\t// TO-DO: include all stocks in portfolio\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t// listener for deselect all button\r\n");
      out.write("\t$(\"#userStockDeSelectAll\").click(function() {\r\n");
      out.write("\t\tconsole.log(\"Pressed deselect all\");\r\n");
      out.write("\r\n");
      out.write("\t\t$('input[name=toggle]').prop('checked', false);\r\n");
      out.write("\r\n");
      out.write("\t\t// graph shouldn't have portfolio line here\r\n");
      out.write("\r\n");
      out.write("\t\t// TO DO: remove all stocks from portfolio\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// function to check which checkbox on homepage was checked\r\n");
      out.write("\t$(\"#stockListBody\").on('click', '.graphToggle', function() {\r\n");
      out.write("\t\tconsole.log(\"clicked a checkbox\");\r\n");
      out.write("\r\n");
      out.write("\t\t// 2 cases -- either clicking a checkbox or unclicking\r\n");
      out.write("\t\tif (this.checked == true) {\r\n");
      out.write("\t\t\tconsole.log(\"checking so include \" + this.value  +\" in graph\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// TO DO -- need to include this stock in line and portfolio val, portfolio change\r\n");
      out.write("\t\t\tGetPortfolioData();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tconsole.log(\"unchecking so don't include \" + this.value  +\" in graph\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// TO DO -- need to remove this stock from portfolio line, val, change\r\n");
      out.write("\t\t\tGetPortfolioData();\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\tfunction GetPortfolioDataOnLoad() {\r\n");
      out.write("\t\tvar today = new Date();\r\n");
      out.write("\t\tif(today.getDate() < 10)\r\n");
      out.write("\t\t\tvar currDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-0'+today.getDate();\r\n");
      out.write("\t\telse var currDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n");
      out.write("\t\tif (today.getDate()< 10 && (today.getMonth()-2)<10)\r\n");
      out.write("\t\t\tvar threeMonthsAgoDate = (today.getFullYear()) + '-0'+(today.getMonth()-2)+'-0'+today.getDate();\r\n");
      out.write("\t\telse if (today.getDate()<10)\r\n");
      out.write("\t\t\tvar threeMonthsAgoDate = (today.getFullYear()) + '-'+(today.getMonth()-2)+'-0'+today.getDate();\r\n");
      out.write("\t\telse if ((today.getMonth()-2)<10)\r\n");
      out.write("\t\t\tvar threeMonthsAgoDate = (today.getFullYear()) + '-0'+(today.getMonth()-2)+'-'+today.getDate();\r\n");
      out.write("\t\telse var threeMonthsAgoDate = (today.getFullYear()) + '-'+(today.getMonth()-2)+'-'+today.getDate();\r\n");
      out.write("\t\tconsole.log(threeMonthsAgoDate);\r\n");
      out.write("\t\tvar startDate = threeMonthsAgoDate;\r\n");
      out.write("\t\tvar endDate = currDate;\r\n");
      out.write("\t\tvar increment = document.getElementById(\"xAxis\").value;\r\n");
      out.write("\t\tvar stockString = \"\";\r\n");
      out.write("\t\t$('.graphToggle').each(function() {\r\n");
      out.write("\t\t\tconsole.log($(this).parent().parent().siblings(\".stockFullName\").text());\r\n");
      out.write("\t\t\tvar stockName = $(this).parent().parent().siblings(\".stockFullName\").text();\r\n");
      out.write("\t\t\tstockString += stockName + \",\";\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tvar stockList = stockString.slice(0,-1);\r\n");
      out.write("\t\tconsole.log(\"STOCKLIST: \" + stockList);\r\n");
      out.write("\t\tconsole.log(\"STARTDATE: \" + startDate);\r\n");
      out.write("\t\tconsole.log(\"ENDDATE: \" + endDate);\r\n");
      out.write("\t\tconsole.log(\"INTERVAL: \" + increment);\r\n");
      out.write("\t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\t\txhttp.open(\"POST\", \"/GraphHoldingsServlet?lowerBound=\" + startDate + \"&stockList=\" + stockList + \"&interval=\" + increment + \"&upperBound=\" + endDate, false); //false means synchronous\r\n");
      out.write("\t\txhttp.send();\r\n");
      out.write("\t\tconsole.log(\"RESPONSE: \" + xhttp.responseText);\r\n");
      out.write("\t\t// graph here now\r\n");
      out.write("\t\tdrawData(\"Portfolio\", xhttp.responseText);\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction GetPortfolioData() {\r\n");
      out.write("\t\tSetStartAndEnd();\r\n");
      out.write("\t\tvar startDate = document.getElementById(\"graphStartDate\").value;\r\n");
      out.write("\t\t//console.log(\"startdate is \"+startDate);\r\n");
      out.write("\t\tvar endDate = document.getElementById(\"graphEndDate\").value;\r\n");
      out.write("\t\tvar increment = document.getElementById(\"xAxis\").value;\r\n");
      out.write("\r\n");
      out.write("\t\tvar stockString = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\t$('.graphToggle').each(function() {\r\n");
      out.write("\t\t\t// console.log($(this.children()));\r\n");
      out.write("\t\t\t// console.log($(this).checked);\r\n");
      out.write("\t\t\tif ($(this).prop(\"checked\")) {\r\n");
      out.write("\t\t\t\t// console.log($(this).parent().parent().siblings(\".stockFullName\").text());\r\n");
      out.write("\t\t\t\tvar stockName = $(this).parent().parent().siblings(\".stockFullName\").text();\r\n");
      out.write("\t\t\t\tstockString += stockName + \",\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar stockList = stockString.slice(0,-1);\r\n");
      out.write("\t\tconsole.log(stockList);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\r\n");
      out.write("\t\txhttp.open(\"POST\", \"/GraphHoldingsServlet?lowerBound=\" + startDate + \"&stockList=\" + stockList + \"&interval=\" + increment + \"&upperBound=\" + endDate, false); //false means synchronous\r\n");
      out.write("\t\r\n");
      out.write("\t\txhttp.send();\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(xhttp.responseText);\r\n");
      out.write("\r\n");
      out.write("\t\t// graph here now\r\n");
      out.write("\t\tdrawData(\"Portfolio\", xhttp.responseText);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// function to check graph date errors by checking start date, end date, increments\r\n");
      out.write("\r\n");
      out.write("\tfunction CheckGraphDateErrors() {\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar startDate = document.getElementById(\"graphStartDate\").value;\r\n");
      out.write("\t\tconsole.log(\"startdate is \"+startDate);\r\n");
      out.write("\t\tvar endDate = document.getElementById(\"graphEndDate\").value;\r\n");
      out.write("\t\tconsole.log(\"enddate is \"+endDate);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar today = new Date();\r\n");
      out.write("\t\tvar currDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(today.getDate() < 10 ){\r\n");
      out.write("\t\t\t//this puts it in YYYY-MM-DD format\r\n");
      out.write("\t\t\tvar currDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-0'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse{\r\n");
      out.write("\t\t\tvar currDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//this puts it in YYYY-MM-DD format\r\n");
      out.write("\t\t//console.log(\"currdate is \"+currDate);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(endDate < startDate){//error for end before start\r\n");
      out.write("\t\t\tconsole.log(\" endDate < startDate\");\r\n");
      out.write("\t\t\tdocument.getElementById(\"graphDateError\").innerHTML = \"End Date cannot be before Start Date\";\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//error if going back more than a year\r\n");
      out.write("\t\tvar lastYear = new Date();\r\n");
      out.write("\t\tif(lastYear.getDate()<10){\r\n");
      out.write("\t\t\tvar lastYearDate = (today.getFullYear()-1)+'-'+(today.getMonth()+1)+'-0'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse{\r\n");
      out.write("\t\t\tvar lastYearDate = (today.getFullYear()-1)+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//console.log(\"date last year was \"+lastYearDate);\r\n");
      out.write("\t\tif(startDate < lastYearDate || endDate < lastYearDate){\r\n");
      out.write("\t\t\tdocument.getElementById(\"graphDateError\").innerHTML = \"Cannot go back more than a year\";\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tfunction SetStartAndEnd() {\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(\"HERE in set start and end\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// check is my start empty, if so, grab the date field and set it for start up to a year ago\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar startDate = document.getElementById(\"graphStartDate\").value;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar today = new Date();\r\n");
      out.write("\t\tif(today.getDate() < 10){\r\n");
      out.write("\t\t\tvar currDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-0'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse{\r\n");
      out.write("\t\t\tvar currDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar lastYear = new Date();\r\n");
      out.write("\t\tif(lastYear.getDate() < 10){\r\n");
      out.write("\t\t\tvar lastYearDate = (today.getFullYear()-1)+'-'+(today.getMonth()+1)+'-0'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse{\r\n");
      out.write("\t\t\tvar lastYearDate = (today.getFullYear()-1)+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar threeMonthsAgo = new Date();\r\n");
      out.write("\t\tif (threeMonthsAgo.getDate()< 10 && threeMonthsAgo.getMonth()-2< 10){\r\n");
      out.write("\t\t\tvar threeMonthsAgoDate = (today.getFullYear()) + '-0'+(today.getMonth()-2)+'-0'+today.getDate();\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\telse if (threeMonthsAgo.getDate()< 10){\r\n");
      out.write("\t\t\tvar threeMonthsAgoDate = (today.getFullYear()) + '-'+(today.getMonth()-2)+'-0'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if (threeMonthsAgo.getMonth()-2< 10){\r\n");
      out.write("\t\t\tvar threeMonthsAgoDate = (today.getFullYear()) + '-0'+(today.getMonth()-2)+'-'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\tvar threeMonthsAgoDate = (today.getFullYear()) + '-'+(today.getMonth()-2)+'-'+today.getDate();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"Date three months ago: \" + threeMonthsAgoDate);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\t\txhttp.open(\"POST\", \"/EarliestTransactionServlet\", false); //false means synchronous\r\n");
      out.write("\t\txhttp.send()\r\n");
      out.write("\t\tvar response = xhttp.responseText;\r\n");
      out.write("\t\tconsole.log(\"received response : \" + response + \" of length \" + response.length);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(startDate == \"\"){//TODO if the startDate is empty change to a purchase date of first stock\r\n");
      out.write("\t\t\t//for now use a year ago \r\n");
      out.write("\t\t\tvar set;\r\n");
      out.write("\t\t\tif (response.length > 2) set = response.substring(0, 10);\r\n");
      out.write("\t\t\telse set = threeMonthsAgoDate;\r\n");
      out.write("\t\t\tdocument.getElementById(\"graphStartDate\").value = set;\r\n");
      out.write("\t\t\tconsole.log(\"startDate is now \"+document.getElementById(\"graphStartDate\").value);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// check is my end date empty, if so grab that date field, and set it to current day\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar endDate = document.getElementById(\"graphEndDate\").value;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(endDate == \"\"){\r\n");
      out.write("\t\t\tconsole.log(\"EndDate is now current date is \"+currDate);\r\n");
      out.write("\t\t\tdocument.getElementById(\"graphEndDate\").value = currDate;\r\n");
      out.write("\t\t\t//this sets it to the current date\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("function queryHistoricalData(tickerSymbol) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar startDate = document.getElementById(\"graphStartDate\").value;\r\n");
      out.write("\t\tconsole.log(\"startdate is \"+startDate);\r\n");
      out.write("\t\tvar endDate = document.getElementById(\"graphEndDate\").value;\r\n");
      out.write("\t\tconsole.log(\"enddate is \"+endDate);\r\n");
      out.write("\t\tvar increment = document.getElementById(\"xAxis\").value;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar xhttp = new XMLHttpRequest(); //only need this for ajax\r\n");
      out.write("\r\n");
      out.write("\t\txhttp.open(\"POST\", \"/HistoricalDataServlet?lowerBound=\" + startDate + \"&ticker=\" + tickerSymbol + \"&interval=\" + increment + \"&upperBound=\" + endDate, false); //false means synchronous\r\n");
      out.write("\t\r\n");
      out.write("\t\txhttp.send();\r\n");
      out.write("\t\tconsole.log(\"reached the end\");\r\n");
      out.write("\t\t//console.log(xhttp.responseText);\r\n");
      out.write("\t\tdrawData(tickerSymbol, xhttp.responseText);\r\n");
      out.write("\t\t// parse response\r\n");
      out.write("\t\t//var dateMap = JSON.parse(xhttp.responseText);\r\n");
      out.write("\t\t//console.log(\"ticker symbol is \" +tickerSymbol);\r\n");
      out.write("\t\t//console.log(\"the dateMap is \"+dateMap);\r\n");
      out.write("\t\t//console.log(dateMap[\"2020-05-12\"]);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tgoogle.charts.load('current', {packages: ['corechart', 'line']});\r\n");
      out.write("\tgoogle.charts.setOnLoadCallback(drawCurveTypes);\r\n");
      out.write("\t\r\n");
      out.write("\tfunction drawData(ticker, stringOfData){\r\n");
      out.write("\t\tvar data = new google.visualization.DataTable();\r\n");
      out.write("\t\t//first we need to put the information into a data table\r\n");
      out.write("\t\tvar data = new google.visualization.DataTable();\r\n");
      out.write("\t\tdata.addColumn('date', 'Time');\r\n");
      out.write("\t\tdata.addColumn('number', ticker);\r\n");
      out.write("\t\tconsole.log(\"ticker is \"+ticker);\r\n");
      out.write("\t\tvar arr=stringOfData.split(\",\");\r\n");
      out.write("\t\t//console.log(\"first data point is \"+arr[0]);\r\n");
      out.write("\t\t//console.log(\"size of data array is \"+arr.length)\r\n");
      out.write("\t\tvar i;\r\n");
      out.write("\t\tfor(i =0; i < arr.length; i++){\r\n");
      out.write("\t\t\tvar dataLine=arr[i].split(\":\");\r\n");
      out.write("\t\t\tvar date = dataLine[0];\r\n");
      out.write("\t\t\tvar value = dataLine[1];\r\n");
      out.write("\t\t\t//console.log(\"at date \"+date+\" we have value \"+Math.round(value));\r\n");
      out.write("\t\t\t//var day=new Date(date);\r\n");
      out.write("\t\t\tdata.addRow([new Date(date), Math.round(value)]);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar options = {\r\n");
      out.write("\t\t        hAxis: {\r\n");
      out.write("\t\t          title: 'Time'\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        vAxis: {\r\n");
      out.write("\t\t          title: 'Value'\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        series: {\r\n");
      out.write("\t\t          1: {curveType: 'function'}\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t      };\r\n");
      out.write("\r\n");
      out.write("\t\t      var chart = new google.visualization.LineChart(document.getElementById('chart_div'));\r\n");
      out.write("\t\t      chart.draw(data, options);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction drawCurveTypes() {\r\n");
      out.write("\t      var data = new google.visualization.DataTable();\r\n");
      out.write("\t      data.addColumn('number', 'X');\r\n");
      out.write("\t      data.addColumn('number', 'Practice Portfolio');\r\n");
      out.write("\r\n");
      out.write("\t      data.addRows([\r\n");
      out.write("\t        [0, 0],    [1, 10],   [2, 23],  [3, 17],   [4, 18],  [5, 9],\r\n");
      out.write("\t        [6, 11],   [7, 27],  [8, 33],  [9, 40],  [10, 32], [11, 35],\r\n");
      out.write("\t        [12, 30], [13, 40], [14, 42], [15, 47], [16, 44], [17, 48]\r\n");
      out.write("\t      ]);\r\n");
      out.write("\t      \r\n");
      out.write("\t      data.addColumn('number', 'Another Line');\r\n");
      out.write("\t      var i;\r\n");
      out.write("\t      for(i=0 ; i<18; i++){\r\n");
      out.write("\t    \t  data.setValue(i, 2, i);\r\n");
      out.write("\t      }\r\n");
      out.write("\r\n");
      out.write("\t      var options = {\r\n");
      out.write("\t        hAxis: {\r\n");
      out.write("\t          title: 'Time'\r\n");
      out.write("\t        },\r\n");
      out.write("\t        vAxis: {\r\n");
      out.write("\t          title: 'Value'\r\n");
      out.write("\t        },\r\n");
      out.write("\t        series: {\r\n");
      out.write("\t          1: {curveType: 'function'}\r\n");
      out.write("\t        }\r\n");
      out.write("\t      };\r\n");
      out.write("\r\n");
      out.write("\t      //var chart = new google.visualization.LineChart(document.getElementById('chart_div'));\r\n");
      out.write("\t      //chart.draw(data, options);\r\n");
      out.write("\t    } \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
